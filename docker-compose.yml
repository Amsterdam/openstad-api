#
# Docker Compose file for Openstad app, i
# Is working, but not actively recommended for development, the mounts do not work nicely with de frontend app, very heavy and slow
#

---
version: '3.1'
services:
  mysql:
    image: "mysql:5"
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: "insecure"
      MYSQL_DATABASE: "api"
      MYSQL_PASSWORD: "insecure"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

    expose:
      - "3306"
      - "33060"
    restart: unless-stopped
    ports:
      - "3306:3306"
    # entrypoint:
    #   sh -c "
    #     echo 'CREATE DATABASE IF NOT EXISTS ${AUTH_DB_NAME}; CREATE DATABASE IF NOT EXISTS ${IMAGE_DB_NAME}; CREATE DATABASE IF NOT EXISTS ${API_DATABASE};' > /docker-entrypoint-initdb.d/init.sql;
    #     /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #   "
    volumes:
      - database:/var/lib/mysql
    networks:
      - database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  api:
    command: npm run dev
    image: ${REGISTRY:-localhost:5001}/${REPOSITORY:-opdrachten/openstad-api}:${VERSION:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "development"
      ADMIN_URL: "http://localhost/admin"
      API_URL: "http://localhost/api"
      API_HOSTNAME: "http://localhost/"
      API_DATABASE_USER: "root"
      API_DATABASE_PASSWORD: "insecure"
      API_DATABASE_DATABASE: "api"
      API_DATABASE_HOST: "mysql"
      API_EMAILADDRESS: "admin@email.com"
      API_EXPRESS_PORT: "8111"
#      API_MAIL_FROM: "admin@email.com"
#      API_MAIL_TRANSPORT_SMTP_PORT: "${MAIL_TRANSPORT_SMTP_PORT}"
#      API_MAIL_TRANSPORT_SMTP_HOST: "${MAIL_TRANSPORT_SMTP_HOST}"
#      API_MAIL_TRANSPORT_SMTP_REQUIRESSL: "${MAIL_TRANSPORT_SMTP_REQUIRESSL}"
#      API_MAIL_TRANSPORT_SMTP_AUTH_USER: "${MAIL_TRANSPORT_SMTP_AUTH_USER}"
#      API_MAIL_TRANSPORT_SMTP_AUTH_PASS: "${MAIL_TRANSPORT_SMTP_AUTH_PASS}"
#      API_NOTIFICATIONS_ADMIN_EMAILADDRESS: "${API_NOTIFICATIONS_ADMIN_EMAILADDRESS}"
#      API_SECURITY_SESSIONS_COOKIENAME: "${API_SECURITY_SESSIONS_COOKIENAME}"
#      API_SECURITY_SESSIONS_ONLYSECURE: "${API_SECURITY_SESSIONS_ONLYSECURE}"
#      API_AUTHORIZATION_JWTSECRET: "${API_AUTHORIZATION_JWTSECRET}"
#      API_AUTHORIZATION_FIXEDAUTHTOKENS: "${API_AUTHORIZATION_FIXEDAUTHTOKENS}"
      FRONTEND_URL: "http://localhost/"
      AUTH_URL: "http://localhost/auth"
      AUTH_INTERNAL_SERVER_URL: "http://localhost/"
#      AUTH_FIRST_CLIENT_ID: "${AUTH_FIRST_CLIENT_ID}"
#      AUTH_FIRST_CLIENT_SECRET: "${AUTH_FIRST_CLIENT_SECRET}"
#      AUTH_FIRST_CLIENT_LOGIN_CODE: "${AUTH_FIRST_CLIENT_LOGIN_CODE}"
    expose:
      - 8111
    ports:
      - 8111:8111
    restart: unless-stopped
    volumes:
        # - ./src:/home/app/src
        - ./config:/home/app/config
        - ./fixtures:/home/app/fixtures
        # - /home/app/node_modules
    networks:
      - database
    depends_on:
      mysql:
        condition: service_healthy

# Volumes section
# Volumes:
# - database: A volume that contains everything that is stored in the MySQL database.
#
volumes:
  database:
  mongo:

#
# Networks section
# Networks:
# - database, represents the isolated network between the server and the database.
networks:
  database:
...